TEST CONSTRUCTORS

first contains:
a => 10
b => 30
c => 50
d => 5


TEST =

Size of first: 0
Size of second: 4


TEST BEGIN END

a => 200
b => 100
c => 300


TEST RBEGIN REND

z => 300
y => 200
x => 100


TEST EMPTY

a => 10
b => 20
c => 30


TEST SIZE

mymap.size() is 3


TEST MAXSIZE

The map contains 1000 elements.


TEST []

mymap['a'] is an element
mymap['b'] is another element
mymap['c'] is another element
mymap['d'] is 
mymap now contains 4 elements.


TEST INSERT

element 'z' already existed with a value of 200
mymap contains:
a => 100
b => 300
c => 400
z => 200
anothermap contains:
a => 100
b => 300


TEST ERASE

a => 10
d => 40


TEST SWAP

foo contains:
a => 11
b => 22
c => 33
bar contains:
x => 100
y => 200


TEST CLEAR

mymap contains:
x => 100
y => 200
z => 300
mymap contains:
a => 1101
b => 2202


TEST KEY COMPARE

mymap contains:
a => 100
b => 200
c => 300



TEST FIND

elements in mymap:
a => 50
c => 150
d => 200


TEST COUNT

a is an element of mymap.
b is not an element of mymap.
c is an element of mymap.
d is not an element of mymap.
e is not an element of mymap.
f is an element of mymap.
g is not an element of mymap.


TEST UPPER/LOWER BOND

a => 20
e => 100


TEST EQUAL RANGE

lower bound points to: b => 20
upper bound points to: c => 30


TEST GET ALLOCATOR

The allocated array has a size of 40 bytes.


TEST MAKE PAIR

foo: 10, 20
bar: 10, 65


